<?php

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2014-06-17 at 11:25:56.
 */
class CRM_ChainSMS_Translator_FFNov12Test extends PHPUnit_Framework_TestCase {

  const TEST_CONTACT_SURNAME = 'ChainSMS Translator Test';
  
  /**
   * @var CRM_Futurefirst_Page_AJAX
   */
  protected $object;
  var $testEntities = array();

  /**
   * Sets up the fixture, for example, opens a network connection.
   * This method is called before a test is executed.
   */
  protected function setUp() {
    $this->object = new CRM_ChainSMS_Translator_FFNov12Test;
  }

  /**
   * Tears down the fixture, for example, closes a network connection.
   * This method is called after a test is executed.
   */
  protected function tearDown() {
    TestUtils::deleteTestEntities($this->testEntities);
    TestUtils::deleteTestContacts(self::TEST_CONTACT_SURNAME);
    parent::tearDown();
  }
  
  /**
   * 
   * 
   */
  public function testFurtherEducation() {
    
  }
  
  /**
   * 
   * 
   */
  public function testHigherEducation() {
    
  }
  
  public function testWorking(){
    
    /* copied and modified from now defunct translate.php */
    
    // init dates
    $dateArray = getdate();
    $startDate = $dateArray['year'] . '-' . $dateArray['mon'] . '-' . $dateArray['mday'];
    $endDate = $dateArray['year'] . '-' . $dateArray['mon'] . '-' . ($dateArray['mday'] + 1);
    
    // create the contact
    $createContactApiParams = array(
      'version' => 3,
      'sequential' => 1,
      'contact_type' => 'Individual',
      'contact_sub_type' => 'Student',
      'first_name' => 'Test Working',
      'last_name' => self::TEST_CONTACT_SURNAME,
    );
    $createContactApiResults = civicrm_api('Contact', 'create', $createContactApiParams);   
    
    $this->assertFalse(civicrm_error($createContactApiResults));
    $this->testEntities[] = array('Contact', $createContactApiResults['id']);
    
    // create the group
    $createGroupApiParams  = array(
      'version' => 3,
      'sequential' => 1,
      'title' => 'SMS Translation Test Working',
    );
    $createGroupApiResults = civicrm_api('Group', 'create', $createGroupApiParams);
    
    $this->assertFalse(civicrm_error($createGroupApiResults), print_r($createGroupApiResults['error_message'], TRUE));
    $this->testEntities[] = array('Group', $createGroupApiResults['id']);
    
    $addContactToGroupApiParams = array();
    
    // create mailing
    
    // add activities    
    
    $translator = new CRM_Chainsms_Translator;

    $translator->setGroups(array($createGroupApiResults['id']));

    $translator->setStartDate($startDate);

    $translator->setEndDate($endDate);

    $translator->prepare();

    $translator->setTranslatorClass("CRM_Chainsms_Translator_FFNov12");
    $translator->setCampaign("November Tracking 2012");

    $translator->translate();
    $translator->update();
  }
  
}
